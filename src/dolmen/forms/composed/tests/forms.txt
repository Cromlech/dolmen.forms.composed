dolmen.forms.composed
==================

Test environment
----------------

   >>> from zope.interface import implements
   >>> from cromlech.io.interfaces import IRequest, IPublicationRoot

   >>> class Context(object):
   ...    implements(IPublicationRoot)
   ...
   ...    def __init__(self, name, parent):
   ...        self.__name__ = name
   ...        self.__parent__ = parent 

   >>> context = Context('content', None)


Composed Form
-------------

This package let you compose more than one form inside an another form.

   >>> from dolmen.forms.composed import ComposedForm
   >>> from cromlech.io.testing import TestRequest

   >>> class MyComplexForm(ComposedForm):
   ...    label = u"Complex form"

   >>> request = TestRequest()
   >>> form = MyComplexForm(context, request)
   >>> form
   <MyComplexForm object at ...>

And this implement correctly the form API:

   >>> from dolmen.forms.base.interfaces import IForm
   >>> from dolmen.forms.composed import interfaces
   >>> from zope.interface.verify import verifyObject

   >>> verifyObject(interfaces.IComposedForm, form)
   True

   >>> interfaces.IComposedForm.extends(IForm)
   True


Sub Form
--------

A subform goes inside a composed form:

   >>> from dolmen.forms.composed import SubForm
   >>> from dolmen.forms.base.interfaces import IFormCanvas

   >>> class MySubForm(SubForm):
   ...    label = u"Sub form"

   >>> subform = MySubForm(context, form, request)
   >>> subform
   <MySubForm object at ...>

And like a composed form this reply to the form API:

   >>> verifyObject(interfaces.ISubForm, subform)
   True

   >>> interfaces.ISubForm.extends(IFormCanvas)
   True


Sub Form Group
--------------

A group of subforms is a logical ensemble of subforms, that can be
nested. They behave like a normal subforms but have some extra
attributes::

   >>> from dolmen.forms.composed import SubFormGroup

   >>> class MySubFormGroup(SubFormGroup):
   ...    label = u"Group of sub forms"

   >>> group = MySubFormGroup(context, request, form)
   >>> group
   <MySubFormGroup object at ...>
